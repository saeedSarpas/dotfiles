#!/usr/bin/env bash
here="$(cd "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)";
source ${HOME}/.zaliases.d/utils.sh;

function _help() {
  local _help_item=$(fuzzy_select echo "${_help_options}" | awk '{print $1}');

  case "${_help_item}" in
    ":c") $(_connect_help);;
    ":D") $(_docker_help);;
    ":DC") $(_docker_compose_help);;
    ":H") $(_helpers_help);;
    ":J") $(_java_help);;
    ":JG") $(_java_help);;
    ":LB") $(_linux_backlight_help);;
    ":n") $(_navigate_help);;
  esac
}

# :H - help
read -r -d '' _help_options << EOM
:c  -- connect to a server
:D  -- docker aliases
:DC -- docker-compose aliases
:H  -- helpers aliases
:J  -- java aliases
:JG -- gradle aliases
:LB -- linux backlight
:n  -- navigate aliases
EOM

alias :=_help;

source ${HOME}/.zaliases.d/backlight.sh
source ${HOME}/.zaliases.d/connect.sh
source ${HOME}/.zaliases.d/docker.sh
source ${HOME}/.zaliases.d/docker_compose.sh
source ${HOME}/.zaliases.d/helpers.sh
source ${HOME}/.zaliases.d/java.sh
source ${HOME}/.zaliases.d/navigate.sh


# AIfA
aifa-scp() {
scp -P 1234 -r saeed@gates.astro.uni-bonn.de:$1 .
}
alias hobbes=''

# ETHZ
eth() {
  mkdir -p $HOME/development
  mkdir -p $HOME/development/${1}.remote
  sshfs sarpass@${1}.ethz.ch:/scratch/saeed $HOME/development/${1}.remote
}


jupyter_remote() {
  if [[ -n "$1" ]]; then host=$1; else host=theia; fi
  if [[ -n "$2" ]]; then port=$2; else port=8888; fi

  ssh -N -f -L localhost:${port}:localhost:${port} sarpass@${host}
}

alias ethvpn='sudo openconnect sslvpn.ethz.ch -u sarpass@student-net.ethz.ch --authgroup=student-net'

# Clear
alias c='clear'

# Python
alias py2='python2'
alias py3='python3'
alias pys='python3 -m http.server'

# Python package manager
alias pipi='pip install --user'

# Sudo
alias s='sudo'

# Tree
alias t='tree'

# Video screen recorder
alias vc='ffmpeg -f alsa -ac 2 -i default -f x11grab -r 15 -s 1280x720 -i :0.0+0,17 -acodec pcm_s16le -vcodec libx264 -preset ultrafast -threads 0 -y video.mkv'
alias vcmac='ffmpeg -f avfoundation -i $1 -s 1280x720 -r 30 -acodec pcm_s16le -vcodec H.264 -preset ultrafast -threads 0 -y video.mkv'

# feh
alias feh='feh -F. -d'
alias fehz='feh -F. -d --auto-zoom'

# screen
alias screen='screen'
alias scr='screen -S'
alias sls='screen -ls'
alias srd='screen -rd'

# alpm data extraction
alias expac="expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -20"
alias expacz="expac -s '%-30n %m' | sort -hk 2 | awk '{printf \"%s %.0f MiB\n\", $1, $2/1024/1024}' | column t"

# Journal controller
alias j='journalctl -xe'
alias ju='journalctl -xe -u'

# dmesg
alias d='dmesg | grep -i'

# Pacman
alias pss='pacman -Ss'
alias sp='sudo pacman'
alias spr='sudo pacman -Rs'
alias sps='sudo pacman -S'

# Systemctl
alias sy='sudo systemctl'
alias syp='sudo systemctl stop'
alias sys='sudo systemctl start'
alias syst='sudo systemctl status'

# Yay
alias ya='yay'
alias yas='yay -S'
alias yass='yay -Ss'
alias update='yay -Syu'

# Sound playback using pulseaudio
alias lb='pactl load-module module-loopback latency_msec=1'
alias lbp='pactl unload-module module-loopback'

# XPS
alias gpust='cat /proc/acpi/bbswitch'
alias gpuon='sudo tee /proc/acpi/bbswitch <<<ON && dmesg |tail -1 && gpust'
alias gpuoff='sudo tee /proc/acpi/bbswitch <<<OFF && dmesg |tail -1 && gpust'
lit(){
  sudo echo "$1" | sudo tee /sys/class/backlight/intel_backlight/brightness
}

# Find
grepp(){
  grep -rnw '.' -A ${2:0} -B ${2:0} -e $1 --color=always $3 | less -r
}

# Make
alias mk='make'
alias mkt='make test'
alias mkw='make watch'
alias mkl='make libstatic'
alias mkc='make -C'

# paCage
alias mkt='make test'
alias mkl='make libstatic'
alias mkll='make libshared'
alias mkc='make clean'
alias mkcc='make -C'
alias mkw='make watch'
alias mkd='make debug'

# Git
alias gsub="git submodule"
alias gsu="git submodule update"
alias gsui="git submodule update --recursive --init"
alias gsur="git submodule update --recursive --remote"
alias gsa="git submodule add"
alias ggpushskipci="ggpush --push-option=ci.skip"

source ~/.zaliases.local


# Safe move

alias usr_bin_mv=`which mv`

mvo(){
  args=( $@ );
    target=${args[$len-1]};

    for f in ${args[@]:0:$len-1}; do
      usr_bin_mv $f $target
    done
  }


mv(){
  args=( $@ );
    target=${args[$len-1]};

    for f in ${args[@]:0:$len-1}; do
      base=$(basename -- "$f");

      fname="${base%.*}";
      ext="${base##*.}";

      if [[ -f "$target/${fname}.${ext}" ]]; then
        i=1;
        new_fname=$(printf "%s/%s_%02d.%s" $target ${fname} $i ${ext});
        while [ -f $new_fname ]; do
          i=$(($i+1));
          new_fname=$(printf "%s/%s_%02d.%s" $target ${fname} $i ${ext});
        done
        echo "$f -> $new_fname"
        usr_bin_mv $f $new_fname
      else
        echo "mv $f $target";
        usr_bin_mv $f $target
      fi
    done
  }

# DNS
dns(){
  echo "- /etc/resolv.conf";
  cat /etc/resolv.conf;

  echo "- cat /run/systemd/resolve/resolv.conf";
  cat /run/systemd/resolve/resolv.conf;

  echo "- resolvectl status";
  resolvectl status;

  echo "- dig google.com";
  dig google.com;

  echo "- systemd-networkd status";
  systemctl status systemd-networkd;

  echo "- systemd-resolved status";
  systemctl status systemd-resolved;
}

# Rhyme/cmake
cwatch() {
  cmake .. && make rhyme_$1_watch
}

cbuild() {
  if [ $# -eq 0 ]
  then
    cmake -DBUILD_DESC:STRING="$1" .. && make && ctest --timeout 10 --output-on-failure
  else
    cmake -DBUILD_DESC:STRING="$1" .. && make VERBOSE=$2 && ctest --timeout 10 --output-on-failure
  fi
}

cdebug() {
  if [ $# -eq 0 ]
  then
    cmake -DBUILD_DESC:STRING="$1" -DCMAKE_BUILD_TYPE=Debug .. && make && ctest --timeout 10 --output-on-failure
  else
    cmake -DBUILD_DESC:STRING="$1" -DCMAKE_BUILD_TYPE=Debug .. && make VERBOSE=$2 && ctest --timeout 10 --output-on-failure
  fi
}

rstr() {
  if [[ -n "$1" ]]; then local old="$1"; else echo "usage: rstr old_string new_strin [filter]"; return; fi
  if [[ -n "$2" ]]; then local new="$2"; else echo "usage: rstr old_string new_strin [filter]"; return; fi
  if [[ -n "$3" ]]; then local filter="$3"; else local filter="."; fi

  for f in `ls | grep -i ${filter}`; do
    ff=${f//$old/$new};
    mv $f $ff;
  done
}


# Vim-like
alias :q='exit'
